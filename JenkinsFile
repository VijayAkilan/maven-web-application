pipeline{
agent{
label 'slave'
}

tools{
maven 'maven_3.9.6'
}
/*echo "The Job name is: ${env.JOB_NAME}"
echo "The Node name is: ${env.NODE_NAME}"
echo "The Build Number is: ${env.Build_Number}"
echo "The Jenkins Home directory  is: ${env.Jenkins_HOME}"*/
stages{
	stage('CheckOutCode'){
		steps{
		    sendSlackNotifications("STARTED")
git branch: 'dev', credentialsId: 'bfc43ad4-9cf9-43ee-b900-4b7d0608e008', url: 'https://github.com/VijayAkilan/maven-web-application.git'
		}
	}
	stage('Build'){
		steps{
			sh "mvn clean package"
		}
	}
	stage('ExecuteSonarReport'){
		steps{
			sh "mvn clean sonar:sonar"
		}
	}
  /*
	stage('UploadArtifactsToNexus'){
		steps{
			sh "mvn clean deploy"
		}
	}
    stage('DeployAppInTomcat'){
		steps{
			sshagent(['d104bc39-26de-4999-96f5-d00991d6eb7b']) {
    sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.14.233:/opt/apache-tomcat-9.0.86/webapps/"
}
		
			}
	}*/



}//stage closing
post {
  success {
	sendSlackNotifications(currentBuild.result)
      }
  failure {
	sendSlackNotifications(currentBuild.result)
      }
}

}//pipeline closing

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications,this func is available once we install stack plugin and send to specific channel
  slackSend (color: colorCode, message: summary, channel : "bankingapp")
}


